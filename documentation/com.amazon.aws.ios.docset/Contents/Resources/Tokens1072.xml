<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSSTSAssumeRoleWithSAMLRequest.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSSTSAssumeRoleWithSAMLRequest</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
            
			
			<NodeRef refid="1072"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSTSAssumeRoleWithSAMLRequest/setDurationSeconds:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. An expiration can also be specified in the SAML authentication response&apos;s &lt;code&gt;NotOnOrAfter&lt;/code&gt; value. The actual expiration time is whichever value is shorter. &lt;/p&gt;&lt;note&gt;The maximum duration for a session is 1 hour, and the minimum duration is 15 minutes, even if values outside this range are specified. &lt;/note&gt;</Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *durationSeconds</Declaration>
			
			
			<Anchor>//api/name/durationSeconds</Anchor>
            <NodeRef refid="1072"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSTSAssumeRoleWithSAMLRequest/durationSeconds</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. An expiration can also be specified in the SAML authentication response&apos;s &lt;code&gt;NotOnOrAfter&lt;/code&gt; value. The actual expiration time is whichever value is shorter. &lt;/p&gt;&lt;note&gt;The maximum duration for a session is 1 hour, and the minimum duration is 15 minutes, even if values outside this range are specified. &lt;/note&gt;</Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *durationSeconds</Declaration>
			
			
			<Anchor>//api/name/durationSeconds</Anchor>
            <NodeRef refid="1072"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSTSAssumeRoleWithSAMLRequest/durationSeconds</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. An expiration can also be specified in the SAML authentication response&apos;s &lt;code&gt;NotOnOrAfter&lt;/code&gt; value. The actual expiration time is whichever value is shorter. &lt;/p&gt;&lt;note&gt;The maximum duration for a session is 1 hour, and the minimum duration is 15 minutes, even if values outside this range are specified. &lt;/note&gt;</Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *durationSeconds</Declaration>
			
			
			<Anchor>//api/name/durationSeconds</Anchor>
            <NodeRef refid="1072"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSTSAssumeRoleWithSAMLRequest/setPolicy:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;An IAM policy in JSON format.&lt;/p&gt;&lt;p&gt;The policy parameter is optional. If you pass a policy, the temporary security credentials that are returned by the operation have the permissions that are allowed by both the access policy of the role that is being assumed, &lt;i&gt;&lt;b&gt;and&lt;/b&gt;&lt;/i&gt; the policy that you pass. This gives you a way to further restrict the permissions for the resulting temporary security credentials. You cannot use the passed policy to grant permissions that are in excess of those allowed by the access policy of the role that is being assumed. For more information, see Permissions for AssumeRoleWithSAML in &lt;i&gt;Using Temporary Security Credentials&lt;/i&gt;. &lt;/p&gt;&lt;note&gt;The policy must be 2048 bytes or shorter, and its packed size must be less than 450 bytes.&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *policy</Declaration>
			
			
			<Anchor>//api/name/policy</Anchor>
            <NodeRef refid="1072"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSTSAssumeRoleWithSAMLRequest/policy</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;An IAM policy in JSON format.&lt;/p&gt;&lt;p&gt;The policy parameter is optional. If you pass a policy, the temporary security credentials that are returned by the operation have the permissions that are allowed by both the access policy of the role that is being assumed, &lt;i&gt;&lt;b&gt;and&lt;/b&gt;&lt;/i&gt; the policy that you pass. This gives you a way to further restrict the permissions for the resulting temporary security credentials. You cannot use the passed policy to grant permissions that are in excess of those allowed by the access policy of the role that is being assumed. For more information, see Permissions for AssumeRoleWithSAML in &lt;i&gt;Using Temporary Security Credentials&lt;/i&gt;. &lt;/p&gt;&lt;note&gt;The policy must be 2048 bytes or shorter, and its packed size must be less than 450 bytes.&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *policy</Declaration>
			
			
			<Anchor>//api/name/policy</Anchor>
            <NodeRef refid="1072"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSTSAssumeRoleWithSAMLRequest/policy</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;An IAM policy in JSON format.&lt;/p&gt;&lt;p&gt;The policy parameter is optional. If you pass a policy, the temporary security credentials that are returned by the operation have the permissions that are allowed by both the access policy of the role that is being assumed, &lt;i&gt;&lt;b&gt;and&lt;/b&gt;&lt;/i&gt; the policy that you pass. This gives you a way to further restrict the permissions for the resulting temporary security credentials. You cannot use the passed policy to grant permissions that are in excess of those allowed by the access policy of the role that is being assumed. For more information, see Permissions for AssumeRoleWithSAML in &lt;i&gt;Using Temporary Security Credentials&lt;/i&gt;. &lt;/p&gt;&lt;note&gt;The policy must be 2048 bytes or shorter, and its packed size must be less than 450 bytes.&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *policy</Declaration>
			
			
			<Anchor>//api/name/policy</Anchor>
            <NodeRef refid="1072"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSTSAssumeRoleWithSAMLRequest/setPrincipalArn:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Amazon Resource Name (ARN) of the SAML provider in IAM that describes the IdP.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *principalArn</Declaration>
			
			
			<Anchor>//api/name/principalArn</Anchor>
            <NodeRef refid="1072"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSTSAssumeRoleWithSAMLRequest/principalArn</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Amazon Resource Name (ARN) of the SAML provider in IAM that describes the IdP.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *principalArn</Declaration>
			
			
			<Anchor>//api/name/principalArn</Anchor>
            <NodeRef refid="1072"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSTSAssumeRoleWithSAMLRequest/principalArn</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Amazon Resource Name (ARN) of the SAML provider in IAM that describes the IdP.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *principalArn</Declaration>
			
			
			<Anchor>//api/name/principalArn</Anchor>
            <NodeRef refid="1072"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSTSAssumeRoleWithSAMLRequest/setRoleArn:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Amazon Resource Name (ARN) of the role that the caller is assuming.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *roleArn</Declaration>
			
			
			<Anchor>//api/name/roleArn</Anchor>
            <NodeRef refid="1072"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSTSAssumeRoleWithSAMLRequest/roleArn</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Amazon Resource Name (ARN) of the role that the caller is assuming.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *roleArn</Declaration>
			
			
			<Anchor>//api/name/roleArn</Anchor>
            <NodeRef refid="1072"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSTSAssumeRoleWithSAMLRequest/roleArn</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Amazon Resource Name (ARN) of the role that the caller is assuming.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *roleArn</Declaration>
			
			
			<Anchor>//api/name/roleArn</Anchor>
            <NodeRef refid="1072"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSTSAssumeRoleWithSAMLRequest/setSAMLAssertion:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The base-64 encoded SAML authentication response provided by the IdP.&lt;/p&gt;&lt;p&gt;For more information, see Configuring a Relying Party and Adding Claims in the &lt;i&gt;Using IAM&lt;/i&gt; guide. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *SAMLAssertion</Declaration>
			
			
			<Anchor>//api/name/SAMLAssertion</Anchor>
            <NodeRef refid="1072"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSTSAssumeRoleWithSAMLRequest/SAMLAssertion</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The base-64 encoded SAML authentication response provided by the IdP.&lt;/p&gt;&lt;p&gt;For more information, see Configuring a Relying Party and Adding Claims in the &lt;i&gt;Using IAM&lt;/i&gt; guide. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *SAMLAssertion</Declaration>
			
			
			<Anchor>//api/name/SAMLAssertion</Anchor>
            <NodeRef refid="1072"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSTSAssumeRoleWithSAMLRequest/SAMLAssertion</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The base-64 encoded SAML authentication response provided by the IdP.&lt;/p&gt;&lt;p&gt;For more information, see Configuring a Relying Party and Adding Claims in the &lt;i&gt;Using IAM&lt;/i&gt; guide. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *SAMLAssertion</Declaration>
			
			
			<Anchor>//api/name/SAMLAssertion</Anchor>
            <NodeRef refid="1072"/>
		</Token>
		
        
        
	</File>
</Tokens>