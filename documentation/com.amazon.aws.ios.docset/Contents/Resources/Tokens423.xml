<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSEC2DescribeSnapshotsRequest.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSEC2DescribeSnapshotsRequest</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
            
			
			<NodeRef refid="423"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeSnapshotsRequest/setDryRun:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *dryRun</Declaration>
			
			
			<Anchor>//api/name/dryRun</Anchor>
            <NodeRef refid="423"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeSnapshotsRequest/dryRun</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *dryRun</Declaration>
			
			
			<Anchor>//api/name/dryRun</Anchor>
            <NodeRef refid="423"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2DescribeSnapshotsRequest/dryRun</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *dryRun</Declaration>
			
			
			<Anchor>//api/name/dryRun</Anchor>
            <NodeRef refid="423"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeSnapshotsRequest/setFilters:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more filters.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;description&lt;/code&gt; - A description of the snapshot.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;owner-alias&lt;/code&gt; - The AWS account alias (for example, &lt;code&gt;amazon&lt;/code&gt;) that owns the snapshot.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;owner-id&lt;/code&gt; - The ID of the AWS account that owns the snapshot.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;progress&lt;/code&gt; - The progress of the snapshot, as a percentage (for example, 80%).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;snapshot-id&lt;/code&gt; - The snapshot ID.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;start-time&lt;/code&gt; - The time stamp when the snapshot was initiated.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;status&lt;/code&gt; - The status of the snapshot (&lt;code&gt;pending&lt;/code&gt; | &lt;code&gt;completed&lt;/code&gt; | &lt;code&gt;error&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;tag&lt;/code&gt;:&lt;i&gt;key&lt;/i&gt;=&lt;i&gt;value&lt;/i&gt; - The key/value combination of a tag assigned to the resource.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;tag-key&lt;/code&gt; - The key of a tag assigned to the resource. This filter is independent of the &lt;code&gt;tag-value&lt;/code&gt; filter. For example, if you use both the filter &quot;tag-key=Purpose&quot; and the filter &quot;tag-value=X&quot;, you get any resources assigned both the tag key Purpose (regardless of what the tag&apos;s value is), and the tag value X (regardless of what the tag&apos;s key is). If you want to list only resources where Purpose is X, see the &lt;code&gt;tag&lt;/code&gt;:&lt;i&gt;key&lt;/i&gt;=&lt;i&gt;value&lt;/i&gt; filter.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;tag-value&lt;/code&gt; - The value of a tag assigned to the resource. This filter is independent of the &lt;code&gt;tag-key&lt;/code&gt; filter.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;volume-id&lt;/code&gt; - The ID of the volume the snapshot is for.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;volume-size&lt;/code&gt; - The size of the volume, in GiB.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray *filters</Declaration>
			
			
			<Anchor>//api/name/filters</Anchor>
            <NodeRef refid="423"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeSnapshotsRequest/filters</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more filters.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;description&lt;/code&gt; - A description of the snapshot.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;owner-alias&lt;/code&gt; - The AWS account alias (for example, &lt;code&gt;amazon&lt;/code&gt;) that owns the snapshot.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;owner-id&lt;/code&gt; - The ID of the AWS account that owns the snapshot.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;progress&lt;/code&gt; - The progress of the snapshot, as a percentage (for example, 80%).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;snapshot-id&lt;/code&gt; - The snapshot ID.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;start-time&lt;/code&gt; - The time stamp when the snapshot was initiated.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;status&lt;/code&gt; - The status of the snapshot (&lt;code&gt;pending&lt;/code&gt; | &lt;code&gt;completed&lt;/code&gt; | &lt;code&gt;error&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;tag&lt;/code&gt;:&lt;i&gt;key&lt;/i&gt;=&lt;i&gt;value&lt;/i&gt; - The key/value combination of a tag assigned to the resource.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;tag-key&lt;/code&gt; - The key of a tag assigned to the resource. This filter is independent of the &lt;code&gt;tag-value&lt;/code&gt; filter. For example, if you use both the filter &quot;tag-key=Purpose&quot; and the filter &quot;tag-value=X&quot;, you get any resources assigned both the tag key Purpose (regardless of what the tag&apos;s value is), and the tag value X (regardless of what the tag&apos;s key is). If you want to list only resources where Purpose is X, see the &lt;code&gt;tag&lt;/code&gt;:&lt;i&gt;key&lt;/i&gt;=&lt;i&gt;value&lt;/i&gt; filter.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;tag-value&lt;/code&gt; - The value of a tag assigned to the resource. This filter is independent of the &lt;code&gt;tag-key&lt;/code&gt; filter.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;volume-id&lt;/code&gt; - The ID of the volume the snapshot is for.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;volume-size&lt;/code&gt; - The size of the volume, in GiB.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray *filters</Declaration>
			
			
			<Anchor>//api/name/filters</Anchor>
            <NodeRef refid="423"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2DescribeSnapshotsRequest/filters</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more filters.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;description&lt;/code&gt; - A description of the snapshot.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;owner-alias&lt;/code&gt; - The AWS account alias (for example, &lt;code&gt;amazon&lt;/code&gt;) that owns the snapshot.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;owner-id&lt;/code&gt; - The ID of the AWS account that owns the snapshot.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;progress&lt;/code&gt; - The progress of the snapshot, as a percentage (for example, 80%).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;snapshot-id&lt;/code&gt; - The snapshot ID.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;start-time&lt;/code&gt; - The time stamp when the snapshot was initiated.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;status&lt;/code&gt; - The status of the snapshot (&lt;code&gt;pending&lt;/code&gt; | &lt;code&gt;completed&lt;/code&gt; | &lt;code&gt;error&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;tag&lt;/code&gt;:&lt;i&gt;key&lt;/i&gt;=&lt;i&gt;value&lt;/i&gt; - The key/value combination of a tag assigned to the resource.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;tag-key&lt;/code&gt; - The key of a tag assigned to the resource. This filter is independent of the &lt;code&gt;tag-value&lt;/code&gt; filter. For example, if you use both the filter &quot;tag-key=Purpose&quot; and the filter &quot;tag-value=X&quot;, you get any resources assigned both the tag key Purpose (regardless of what the tag&apos;s value is), and the tag value X (regardless of what the tag&apos;s key is). If you want to list only resources where Purpose is X, see the &lt;code&gt;tag&lt;/code&gt;:&lt;i&gt;key&lt;/i&gt;=&lt;i&gt;value&lt;/i&gt; filter.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;tag-value&lt;/code&gt; - The value of a tag assigned to the resource. This filter is independent of the &lt;code&gt;tag-key&lt;/code&gt; filter.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;volume-id&lt;/code&gt; - The ID of the volume the snapshot is for.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;volume-size&lt;/code&gt; - The size of the volume, in GiB.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray *filters</Declaration>
			
			
			<Anchor>//api/name/filters</Anchor>
            <NodeRef refid="423"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeSnapshotsRequest/setMaxResults:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *maxResults</Declaration>
			
			
			<Anchor>//api/name/maxResults</Anchor>
            <NodeRef refid="423"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeSnapshotsRequest/maxResults</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *maxResults</Declaration>
			
			
			<Anchor>//api/name/maxResults</Anchor>
            <NodeRef refid="423"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2DescribeSnapshotsRequest/maxResults</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *maxResults</Declaration>
			
			
			<Anchor>//api/name/maxResults</Anchor>
            <NodeRef refid="423"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeSnapshotsRequest/setNextToken:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *nextToken</Declaration>
			
			
			<Anchor>//api/name/nextToken</Anchor>
            <NodeRef refid="423"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeSnapshotsRequest/nextToken</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *nextToken</Declaration>
			
			
			<Anchor>//api/name/nextToken</Anchor>
            <NodeRef refid="423"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2DescribeSnapshotsRequest/nextToken</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *nextToken</Declaration>
			
			
			<Anchor>//api/name/nextToken</Anchor>
            <NodeRef refid="423"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeSnapshotsRequest/setOwnerIds:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the snapshots owned by the specified owner. Multiple owners can be specified.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray *ownerIds</Declaration>
			
			
			<Anchor>//api/name/ownerIds</Anchor>
            <NodeRef refid="423"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeSnapshotsRequest/ownerIds</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the snapshots owned by the specified owner. Multiple owners can be specified.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray *ownerIds</Declaration>
			
			
			<Anchor>//api/name/ownerIds</Anchor>
            <NodeRef refid="423"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2DescribeSnapshotsRequest/ownerIds</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the snapshots owned by the specified owner. Multiple owners can be specified.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray *ownerIds</Declaration>
			
			
			<Anchor>//api/name/ownerIds</Anchor>
            <NodeRef refid="423"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeSnapshotsRequest/setRestorableByUserIds:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more AWS accounts IDs that can create volumes from the snapshot.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray *restorableByUserIds</Declaration>
			
			
			<Anchor>//api/name/restorableByUserIds</Anchor>
            <NodeRef refid="423"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeSnapshotsRequest/restorableByUserIds</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more AWS accounts IDs that can create volumes from the snapshot.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray *restorableByUserIds</Declaration>
			
			
			<Anchor>//api/name/restorableByUserIds</Anchor>
            <NodeRef refid="423"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2DescribeSnapshotsRequest/restorableByUserIds</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more AWS accounts IDs that can create volumes from the snapshot.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray *restorableByUserIds</Declaration>
			
			
			<Anchor>//api/name/restorableByUserIds</Anchor>
            <NodeRef refid="423"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeSnapshotsRequest/setSnapshotIds:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more snapshot IDs.&lt;/p&gt;&lt;p&gt;Default: Describes snapshots for which you have launch permissions.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray *snapshotIds</Declaration>
			
			
			<Anchor>//api/name/snapshotIds</Anchor>
            <NodeRef refid="423"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeSnapshotsRequest/snapshotIds</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more snapshot IDs.&lt;/p&gt;&lt;p&gt;Default: Describes snapshots for which you have launch permissions.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray *snapshotIds</Declaration>
			
			
			<Anchor>//api/name/snapshotIds</Anchor>
            <NodeRef refid="423"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2DescribeSnapshotsRequest/snapshotIds</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more snapshot IDs.&lt;/p&gt;&lt;p&gt;Default: Describes snapshots for which you have launch permissions.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray *snapshotIds</Declaration>
			
			
			<Anchor>//api/name/snapshotIds</Anchor>
            <NodeRef refid="423"/>
		</Token>
		
        
        
	</File>
</Tokens>