<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSAutoScalingPutLifecycleHookType.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingPutLifecycleHookType</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
            
			
			<NodeRef refid="71"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingPutLifecycleHookType/setAutoScalingGroupName:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the Auto Scaling group to which you want to assign the lifecycle hook.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *autoScalingGroupName</Declaration>
			
			
			<Anchor>//api/name/autoScalingGroupName</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingPutLifecycleHookType/autoScalingGroupName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the Auto Scaling group to which you want to assign the lifecycle hook.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *autoScalingGroupName</Declaration>
			
			
			<Anchor>//api/name/autoScalingGroupName</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingPutLifecycleHookType/autoScalingGroupName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the Auto Scaling group to which you want to assign the lifecycle hook.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *autoScalingGroupName</Declaration>
			
			
			<Anchor>//api/name/autoScalingGroupName</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingPutLifecycleHookType/setDefaultResult:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. The value for this parameter can be either &lt;code&gt;CONTINUE&lt;/code&gt; or &lt;code&gt;ABANDON&lt;/code&gt;. The default value for this parameter is &lt;code&gt;ABANDON&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *defaultResult</Declaration>
			
			
			<Anchor>//api/name/defaultResult</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingPutLifecycleHookType/defaultResult</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. The value for this parameter can be either &lt;code&gt;CONTINUE&lt;/code&gt; or &lt;code&gt;ABANDON&lt;/code&gt;. The default value for this parameter is &lt;code&gt;ABANDON&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *defaultResult</Declaration>
			
			
			<Anchor>//api/name/defaultResult</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingPutLifecycleHookType/defaultResult</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. The value for this parameter can be either &lt;code&gt;CONTINUE&lt;/code&gt; or &lt;code&gt;ABANDON&lt;/code&gt;. The default value for this parameter is &lt;code&gt;ABANDON&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *defaultResult</Declaration>
			
			
			<Anchor>//api/name/defaultResult</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingPutLifecycleHookType/setHeartbeatTimeout:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Defines the amount of time, in seconds, that can elapse before the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling performs the action defined in the &lt;code&gt;DefaultResult&lt;/code&gt; parameter. You can prevent the lifecycle hook from timing out by calling &lt;a&gt;RecordLifecycleActionHeartbeat&lt;/a&gt;. The default value for this parameter is 3600 seconds (1 hour).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *heartbeatTimeout</Declaration>
			
			
			<Anchor>//api/name/heartbeatTimeout</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingPutLifecycleHookType/heartbeatTimeout</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Defines the amount of time, in seconds, that can elapse before the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling performs the action defined in the &lt;code&gt;DefaultResult&lt;/code&gt; parameter. You can prevent the lifecycle hook from timing out by calling &lt;a&gt;RecordLifecycleActionHeartbeat&lt;/a&gt;. The default value for this parameter is 3600 seconds (1 hour).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *heartbeatTimeout</Declaration>
			
			
			<Anchor>//api/name/heartbeatTimeout</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingPutLifecycleHookType/heartbeatTimeout</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Defines the amount of time, in seconds, that can elapse before the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling performs the action defined in the &lt;code&gt;DefaultResult&lt;/code&gt; parameter. You can prevent the lifecycle hook from timing out by calling &lt;a&gt;RecordLifecycleActionHeartbeat&lt;/a&gt;. The default value for this parameter is 3600 seconds (1 hour).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *heartbeatTimeout</Declaration>
			
			
			<Anchor>//api/name/heartbeatTimeout</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingPutLifecycleHookType/setLifecycleHookName:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the lifecycle hook.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *lifecycleHookName</Declaration>
			
			
			<Anchor>//api/name/lifecycleHookName</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingPutLifecycleHookType/lifecycleHookName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the lifecycle hook.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *lifecycleHookName</Declaration>
			
			
			<Anchor>//api/name/lifecycleHookName</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingPutLifecycleHookType/lifecycleHookName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the lifecycle hook.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *lifecycleHookName</Declaration>
			
			
			<Anchor>//api/name/lifecycleHookName</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingPutLifecycleHookType/setLifecycleTransition:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Amazon EC2 instance state to which you want to attach the lifecycle hook. See &lt;a&gt;DescribeLifecycleHookTypes&lt;/a&gt; for a list of available lifecycle hook types.&lt;/p&gt;&lt;note&gt;&lt;p&gt;This parameter is required for new lifecycle hooks, but optional when updating existing hooks.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *lifecycleTransition</Declaration>
			
			
			<Anchor>//api/name/lifecycleTransition</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingPutLifecycleHookType/lifecycleTransition</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Amazon EC2 instance state to which you want to attach the lifecycle hook. See &lt;a&gt;DescribeLifecycleHookTypes&lt;/a&gt; for a list of available lifecycle hook types.&lt;/p&gt;&lt;note&gt;&lt;p&gt;This parameter is required for new lifecycle hooks, but optional when updating existing hooks.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *lifecycleTransition</Declaration>
			
			
			<Anchor>//api/name/lifecycleTransition</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingPutLifecycleHookType/lifecycleTransition</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Amazon EC2 instance state to which you want to attach the lifecycle hook. See &lt;a&gt;DescribeLifecycleHookTypes&lt;/a&gt; for a list of available lifecycle hook types.&lt;/p&gt;&lt;note&gt;&lt;p&gt;This parameter is required for new lifecycle hooks, but optional when updating existing hooks.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *lifecycleTransition</Declaration>
			
			
			<Anchor>//api/name/lifecycleTransition</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingPutLifecycleHookType/setNotificationMetadata:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Contains additional information that you want to include any time Auto Scaling sends a message to the notification target.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *notificationMetadata</Declaration>
			
			
			<Anchor>//api/name/notificationMetadata</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingPutLifecycleHookType/notificationMetadata</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Contains additional information that you want to include any time Auto Scaling sends a message to the notification target.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *notificationMetadata</Declaration>
			
			
			<Anchor>//api/name/notificationMetadata</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingPutLifecycleHookType/notificationMetadata</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Contains additional information that you want to include any time Auto Scaling sends a message to the notification target.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *notificationMetadata</Declaration>
			
			
			<Anchor>//api/name/notificationMetadata</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingPutLifecycleHookType/setNotificationTargetARN:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ARN of the notification target that Auto Scaling will use to notify you when an instance is in the transition state for the lifecycle hook. This ARN target can be either an SQS queue or an SNS topic. &lt;/p&gt;&lt;note&gt;&lt;p&gt;This parameter is required for new lifecycle hooks, but optional when updating existing hooks.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;The notification message sent to the target will include:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;LifecycleActionToken&lt;/b&gt;. The Lifecycle action token.&lt;/li&gt;&lt;li&gt;&lt;b&gt;AccountId&lt;/b&gt;. The user account ID.&lt;/li&gt;&lt;li&gt;&lt;b&gt;AutoScalingGroupName&lt;/b&gt;. The name of the Auto Scaling group.&lt;/li&gt;&lt;li&gt;&lt;b&gt;LifecycleHookName&lt;/b&gt;. The lifecycle hook name.&lt;/li&gt;&lt;li&gt;&lt;b&gt;EC2InstanceId&lt;/b&gt;. The EC2 instance ID.&lt;/li&gt;&lt;li&gt;&lt;b&gt;LifecycleTransition&lt;/b&gt;. The lifecycle transition.&lt;/li&gt;&lt;li&gt;&lt;b&gt;NotificationMetadata&lt;/b&gt;. The notification metadata.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This operation uses the JSON format when sending notifications to an Amazon SQS queue, and an email key/value pair format when sending notifications to an Amazon SNS topic.&lt;/p&gt;&lt;p&gt;When you call this operation, a test message is sent to the notification target. This test message contains an additional key/value pair: &lt;code&gt;Event:autoscaling:TEST_NOTIFICATION&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *notificationTargetARN</Declaration>
			
			
			<Anchor>//api/name/notificationTargetARN</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingPutLifecycleHookType/notificationTargetARN</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ARN of the notification target that Auto Scaling will use to notify you when an instance is in the transition state for the lifecycle hook. This ARN target can be either an SQS queue or an SNS topic. &lt;/p&gt;&lt;note&gt;&lt;p&gt;This parameter is required for new lifecycle hooks, but optional when updating existing hooks.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;The notification message sent to the target will include:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;LifecycleActionToken&lt;/b&gt;. The Lifecycle action token.&lt;/li&gt;&lt;li&gt;&lt;b&gt;AccountId&lt;/b&gt;. The user account ID.&lt;/li&gt;&lt;li&gt;&lt;b&gt;AutoScalingGroupName&lt;/b&gt;. The name of the Auto Scaling group.&lt;/li&gt;&lt;li&gt;&lt;b&gt;LifecycleHookName&lt;/b&gt;. The lifecycle hook name.&lt;/li&gt;&lt;li&gt;&lt;b&gt;EC2InstanceId&lt;/b&gt;. The EC2 instance ID.&lt;/li&gt;&lt;li&gt;&lt;b&gt;LifecycleTransition&lt;/b&gt;. The lifecycle transition.&lt;/li&gt;&lt;li&gt;&lt;b&gt;NotificationMetadata&lt;/b&gt;. The notification metadata.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This operation uses the JSON format when sending notifications to an Amazon SQS queue, and an email key/value pair format when sending notifications to an Amazon SNS topic.&lt;/p&gt;&lt;p&gt;When you call this operation, a test message is sent to the notification target. This test message contains an additional key/value pair: &lt;code&gt;Event:autoscaling:TEST_NOTIFICATION&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *notificationTargetARN</Declaration>
			
			
			<Anchor>//api/name/notificationTargetARN</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingPutLifecycleHookType/notificationTargetARN</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ARN of the notification target that Auto Scaling will use to notify you when an instance is in the transition state for the lifecycle hook. This ARN target can be either an SQS queue or an SNS topic. &lt;/p&gt;&lt;note&gt;&lt;p&gt;This parameter is required for new lifecycle hooks, but optional when updating existing hooks.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;The notification message sent to the target will include:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;LifecycleActionToken&lt;/b&gt;. The Lifecycle action token.&lt;/li&gt;&lt;li&gt;&lt;b&gt;AccountId&lt;/b&gt;. The user account ID.&lt;/li&gt;&lt;li&gt;&lt;b&gt;AutoScalingGroupName&lt;/b&gt;. The name of the Auto Scaling group.&lt;/li&gt;&lt;li&gt;&lt;b&gt;LifecycleHookName&lt;/b&gt;. The lifecycle hook name.&lt;/li&gt;&lt;li&gt;&lt;b&gt;EC2InstanceId&lt;/b&gt;. The EC2 instance ID.&lt;/li&gt;&lt;li&gt;&lt;b&gt;LifecycleTransition&lt;/b&gt;. The lifecycle transition.&lt;/li&gt;&lt;li&gt;&lt;b&gt;NotificationMetadata&lt;/b&gt;. The notification metadata.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This operation uses the JSON format when sending notifications to an Amazon SQS queue, and an email key/value pair format when sending notifications to an Amazon SNS topic.&lt;/p&gt;&lt;p&gt;When you call this operation, a test message is sent to the notification target. This test message contains an additional key/value pair: &lt;code&gt;Event:autoscaling:TEST_NOTIFICATION&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *notificationTargetARN</Declaration>
			
			
			<Anchor>//api/name/notificationTargetARN</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingPutLifecycleHookType/setRoleARN:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ARN of the Amazon IAM role that allows the Auto Scaling group to publish to the specified notification target.&lt;/p&gt;&lt;note&gt;&lt;p&gt;This parameter is required for new lifecycle hooks, but optional when updating existing hooks.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *roleARN</Declaration>
			
			
			<Anchor>//api/name/roleARN</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingPutLifecycleHookType/roleARN</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ARN of the Amazon IAM role that allows the Auto Scaling group to publish to the specified notification target.&lt;/p&gt;&lt;note&gt;&lt;p&gt;This parameter is required for new lifecycle hooks, but optional when updating existing hooks.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *roleARN</Declaration>
			
			
			<Anchor>//api/name/roleARN</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingPutLifecycleHookType/roleARN</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ARN of the Amazon IAM role that allows the Auto Scaling group to publish to the specified notification target.&lt;/p&gt;&lt;note&gt;&lt;p&gt;This parameter is required for new lifecycle hooks, but optional when updating existing hooks.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *roleARN</Declaration>
			
			
			<Anchor>//api/name/roleARN</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
        
        
	</File>
</Tokens>