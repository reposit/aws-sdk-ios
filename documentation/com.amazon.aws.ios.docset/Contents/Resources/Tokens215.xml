<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSDynamoDBKeysAndAttributes.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSDynamoDBKeysAndAttributes</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Represents a set of primary keys and, for each key, the attributes to retrieve from the table.&lt;/p&gt;&lt;p&gt;For each primary key, you must provide &lt;i&gt;all&lt;/i&gt; of the key attributes. For example, with a hash type primary key, you only need to specify the hash attribute. For a hash-and-range type primary key, you must specify &lt;i&gt;both&lt;/i&gt; the hash attribute and the range attribute.&lt;/p&gt;
Required parameters: [Keys]</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
            
			
			<NodeRef refid="215"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBKeysAndAttributes/setAttributesToGet:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more attributes to retrieve from the table or index. If no attribute names are specified then all attributes will be returned. If any of the specified attributes are not found, they will not appear in the result.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray *attributesToGet</Declaration>
			
			
			<Anchor>//api/name/attributesToGet</Anchor>
            <NodeRef refid="215"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBKeysAndAttributes/attributesToGet</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more attributes to retrieve from the table or index. If no attribute names are specified then all attributes will be returned. If any of the specified attributes are not found, they will not appear in the result.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray *attributesToGet</Declaration>
			
			
			<Anchor>//api/name/attributesToGet</Anchor>
            <NodeRef refid="215"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBKeysAndAttributes/attributesToGet</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more attributes to retrieve from the table or index. If no attribute names are specified then all attributes will be returned. If any of the specified attributes are not found, they will not appear in the result.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray *attributesToGet</Declaration>
			
			
			<Anchor>//api/name/attributesToGet</Anchor>
            <NodeRef refid="215"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBKeysAndAttributes/setConsistentRead:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The consistency of a read operation. If set to &lt;code&gt;true&lt;/code&gt;, then a strongly consistent read is used; otherwise, an eventually consistent read is used.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *consistentRead</Declaration>
			
			
			<Anchor>//api/name/consistentRead</Anchor>
            <NodeRef refid="215"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBKeysAndAttributes/consistentRead</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The consistency of a read operation. If set to &lt;code&gt;true&lt;/code&gt;, then a strongly consistent read is used; otherwise, an eventually consistent read is used.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *consistentRead</Declaration>
			
			
			<Anchor>//api/name/consistentRead</Anchor>
            <NodeRef refid="215"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBKeysAndAttributes/consistentRead</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The consistency of a read operation. If set to &lt;code&gt;true&lt;/code&gt;, then a strongly consistent read is used; otherwise, an eventually consistent read is used.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *consistentRead</Declaration>
			
			
			<Anchor>//api/name/consistentRead</Anchor>
            <NodeRef refid="215"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBKeysAndAttributes/setExpressionAttributeNames:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more substitution tokens for simplifying complex expressions. The following are some use cases for an &lt;i&gt;ExpressionAttributeNames&lt;/i&gt; value:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;To shorten an attribute name that is very long or unwieldy in an expression.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;To create a placeholder for repeating occurrences of an attribute name in an expression.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;To prevent special characters in an attribute name from being misinterpreted in an expression.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Use the &lt;b&gt;#&lt;/b&gt; character in an expression to dereference an attribute name. For example, consider the following expression:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;order.customerInfo.LastName = &quot;Smith&quot; OR order.customerInfo.LastName = &quot;Jones&quot;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Now suppose that you specified the following for &lt;i&gt;ExpressionAttributeNames&lt;/i&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;{&quot;n&quot;:&quot;order.customerInfo.LastName&quot;}&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The expression can now be simplified as follows:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;#n = &quot;Smith&quot; OR #n = &quot;Jones&quot;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary *expressionAttributeNames</Declaration>
			
			
			<Anchor>//api/name/expressionAttributeNames</Anchor>
            <NodeRef refid="215"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBKeysAndAttributes/expressionAttributeNames</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more substitution tokens for simplifying complex expressions. The following are some use cases for an &lt;i&gt;ExpressionAttributeNames&lt;/i&gt; value:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;To shorten an attribute name that is very long or unwieldy in an expression.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;To create a placeholder for repeating occurrences of an attribute name in an expression.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;To prevent special characters in an attribute name from being misinterpreted in an expression.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Use the &lt;b&gt;#&lt;/b&gt; character in an expression to dereference an attribute name. For example, consider the following expression:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;order.customerInfo.LastName = &quot;Smith&quot; OR order.customerInfo.LastName = &quot;Jones&quot;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Now suppose that you specified the following for &lt;i&gt;ExpressionAttributeNames&lt;/i&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;{&quot;n&quot;:&quot;order.customerInfo.LastName&quot;}&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The expression can now be simplified as follows:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;#n = &quot;Smith&quot; OR #n = &quot;Jones&quot;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary *expressionAttributeNames</Declaration>
			
			
			<Anchor>//api/name/expressionAttributeNames</Anchor>
            <NodeRef refid="215"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBKeysAndAttributes/expressionAttributeNames</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more substitution tokens for simplifying complex expressions. The following are some use cases for an &lt;i&gt;ExpressionAttributeNames&lt;/i&gt; value:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;To shorten an attribute name that is very long or unwieldy in an expression.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;To create a placeholder for repeating occurrences of an attribute name in an expression.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;To prevent special characters in an attribute name from being misinterpreted in an expression.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Use the &lt;b&gt;#&lt;/b&gt; character in an expression to dereference an attribute name. For example, consider the following expression:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;order.customerInfo.LastName = &quot;Smith&quot; OR order.customerInfo.LastName = &quot;Jones&quot;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Now suppose that you specified the following for &lt;i&gt;ExpressionAttributeNames&lt;/i&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;{&quot;n&quot;:&quot;order.customerInfo.LastName&quot;}&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The expression can now be simplified as follows:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;#n = &quot;Smith&quot; OR #n = &quot;Jones&quot;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary *expressionAttributeNames</Declaration>
			
			
			<Anchor>//api/name/expressionAttributeNames</Anchor>
            <NodeRef refid="215"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBKeysAndAttributes/setKeys:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The primary key attribute values that define the items and the attributes associated with the items.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray *keys</Declaration>
			
			
			<Anchor>//api/name/keys</Anchor>
            <NodeRef refid="215"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBKeysAndAttributes/keys</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The primary key attribute values that define the items and the attributes associated with the items.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray *keys</Declaration>
			
			
			<Anchor>//api/name/keys</Anchor>
            <NodeRef refid="215"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBKeysAndAttributes/keys</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The primary key attribute values that define the items and the attributes associated with the items.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray *keys</Declaration>
			
			
			<Anchor>//api/name/keys</Anchor>
            <NodeRef refid="215"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBKeysAndAttributes/setProjectionExpression:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more attributes to retrieve from the table. These attributes can include scalars, sets, or elements of a JSON document. The attributes in the expression must be separated by commas.&lt;/p&gt;&lt;p&gt;If no attribute names are specified, then all attributes will be returned. If any of the requested attributes are not found, they will not appear in the result.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *projectionExpression</Declaration>
			
			
			<Anchor>//api/name/projectionExpression</Anchor>
            <NodeRef refid="215"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBKeysAndAttributes/projectionExpression</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more attributes to retrieve from the table. These attributes can include scalars, sets, or elements of a JSON document. The attributes in the expression must be separated by commas.&lt;/p&gt;&lt;p&gt;If no attribute names are specified, then all attributes will be returned. If any of the requested attributes are not found, they will not appear in the result.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *projectionExpression</Declaration>
			
			
			<Anchor>//api/name/projectionExpression</Anchor>
            <NodeRef refid="215"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBKeysAndAttributes/projectionExpression</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more attributes to retrieve from the table. These attributes can include scalars, sets, or elements of a JSON document. The attributes in the expression must be separated by commas.&lt;/p&gt;&lt;p&gt;If no attribute names are specified, then all attributes will be returned. If any of the requested attributes are not found, they will not appear in the result.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *projectionExpression</Declaration>
			
			
			<Anchor>//api/name/projectionExpression</Anchor>
            <NodeRef refid="215"/>
		</Token>
		
        
        
	</File>
</Tokens>