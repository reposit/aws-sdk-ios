<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSS3.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSS3</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
            
			
			<NodeRef refid="808"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/setConfiguration:</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/configuration</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSS3/configuration</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSS3/defaultS3</TokenIdentifier>
			<Abstract type="html">Returns the singleton service client. If the singleton object does not exist, the SDK instantiates the default service client with defaultServiceConfiguration from [AWSServiceManager defaultServiceManager]. The reference to this object is maintained by the SDK, and you do not need to retain it manually.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
			<Declaration>+ (instancetype)defaultS3</Declaration>
			
			<ReturnValue><Abstract type="html">The default service client.</Abstract></ReturnValue>
			<Anchor>//api/name/defaultS3</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSS3/registerS3WithConfiguration:forKey:</TokenIdentifier>
			<Abstract type="html">Creates a service client with the given service configuration and registers it for the key.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
			<Declaration>+ (void)registerS3WithConfiguration:(AWSServiceConfiguration *)configuration forKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>configuration</Name>
					<Abstract type="html">A service configuration object.</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/registerS3WithConfiguration:forKey:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSS3/S3ForKey:</TokenIdentifier>
			<Abstract type="html">Retrieves the service client associated with the key. You need to call + registerS3WithConfiguration:forKey: before invoking this method. If + registerS3WithConfiguration:forKey: has not been called in advance or the key does not exist, this method returns nil.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
			<Declaration>+ (instancetype)S3ForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of the service client.</Abstract></ReturnValue>
			<Anchor>//api/name/S3ForKey:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSS3/removeS3ForKey:</TokenIdentifier>
			<Abstract type="html">Removes the service client associated with the key and release it.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
			<Declaration>+ (void)removeS3ForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeS3ForKey:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/initWithConfiguration:</TokenIdentifier>
			<Abstract type="html">Instantiates the service client with the given service configuration.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithConfiguration:(AWSServiceConfiguration *)configuration</Declaration>
			<Parameters>
				<Parameter>
					<Name>configuration</Name>
					<Abstract type="html">The service configuration object.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of the service client.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithConfiguration:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/abortMultipartUpload:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Aborts a multipart upload.&lt;/p&gt;&lt;p&gt;To verify that all parts have been removed, so you don&apos;t get charged for the part storage, you should call the List Parts operation and ensure the parts list is empty.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3AbortMultipartUploadRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)abortMultipartUpload:(AWSS3AbortMultipartUploadRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AbortMultipartUpload service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSS3ErrorDomain domain and the following error code: AWSS3ErrorNoSuchUpload.</Abstract></ReturnValue>
			<Anchor>//api/name/abortMultipartUpload:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/completeMultipartUpload:</TokenIdentifier>
			<Abstract type="html">Completes a multipart upload by assembling previously uploaded parts.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3CompleteMultipartUploadRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3CompleteMultipartUploadOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)completeMultipartUpload:(AWSS3CompleteMultipartUploadRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CompleteMultipartUpload service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3CompleteMultipartUploadOutput.</Abstract></ReturnValue>
			<Anchor>//api/name/completeMultipartUpload:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/createBucket:</TokenIdentifier>
			<Abstract type="html">Creates a new bucket.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3CreateBucketRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3CreateBucketOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)createBucket:(AWSS3CreateBucketRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateBucket service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3CreateBucketOutput. On failed execution, task.error may contain an NSError with AWSS3ErrorDomain domain and the following error code: AWSS3ErrorBucketAlreadyExists.</Abstract></ReturnValue>
			<Anchor>//api/name/createBucket:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/createMultipartUpload:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Initiates a multipart upload and returns an upload ID.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; After you initiate multipart upload and upload one or more parts, you must either complete or abort multipart upload in order to stop getting charged for storage of the uploaded parts. Only after you either complete or abort multipart upload, Amazon S3 frees up the parts storage and stops charging you for the parts storage.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3CreateMultipartUploadRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3CreateMultipartUploadOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)createMultipartUpload:(AWSS3CreateMultipartUploadRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateMultipartUpload service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3CreateMultipartUploadOutput.</Abstract></ReturnValue>
			<Anchor>//api/name/createMultipartUpload:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/deleteBucket:</TokenIdentifier>
			<Abstract type="html">Deletes the bucket. All objects (including all object versions and Delete Markers) in the bucket must be deleted before the bucket itself can be deleted.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3DeleteBucketRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteBucket:(AWSS3DeleteBucketRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteBucket service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteBucket:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/deleteBucketCors:</TokenIdentifier>
			<Abstract type="html">Deletes the cors configuration information set for the bucket.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3DeleteBucketCorsRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteBucketCors:(AWSS3DeleteBucketCorsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteBucketCors service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteBucketCors:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/deleteBucketLifecycle:</TokenIdentifier>
			<Abstract type="html">Deletes the lifecycle configuration from the bucket.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3DeleteBucketLifecycleRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteBucketLifecycle:(AWSS3DeleteBucketLifecycleRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteBucketLifecycle service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteBucketLifecycle:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/deleteBucketPolicy:</TokenIdentifier>
			<Abstract type="html">Deletes the policy from the bucket.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3DeleteBucketPolicyRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteBucketPolicy:(AWSS3DeleteBucketPolicyRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteBucketPolicy service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteBucketPolicy:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/deleteBucketTagging:</TokenIdentifier>
			<Abstract type="html">Deletes the tags from the bucket.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3DeleteBucketTaggingRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteBucketTagging:(AWSS3DeleteBucketTaggingRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteBucketTagging service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteBucketTagging:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/deleteBucketWebsite:</TokenIdentifier>
			<Abstract type="html">This operation removes the website configuration from the bucket.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3DeleteBucketWebsiteRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteBucketWebsite:(AWSS3DeleteBucketWebsiteRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteBucketWebsite service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteBucketWebsite:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/deleteObject:</TokenIdentifier>
			<Abstract type="html">Removes the null version (if there is one) of an object and inserts a delete marker, which becomes the latest version of the object. If there isn&apos;t a null version, Amazon S3 does not remove any objects.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3DeleteObjectRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3DeleteObjectOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteObject:(AWSS3DeleteObjectRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteObject service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3DeleteObjectOutput.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteObject:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/deleteObjects:</TokenIdentifier>
			<Abstract type="html">This operation enables you to delete multiple objects from a bucket using a single HTTP request. You may specify up to 1000 keys.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3DeleteObjectsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3DeleteObjectsOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteObjects:(AWSS3DeleteObjectsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteObjects service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3DeleteObjectsOutput.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteObjects:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/getBucketAcl:</TokenIdentifier>
			<Abstract type="html">Gets the access control policy for the bucket.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetBucketAclRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetBucketAclOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)getBucketAcl:(AWSS3GetBucketAclRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetBucketAcl service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3GetBucketAclOutput.</Abstract></ReturnValue>
			<Anchor>//api/name/getBucketAcl:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/getBucketCors:</TokenIdentifier>
			<Abstract type="html">Returns the cors configuration for the bucket.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetBucketCorsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetBucketCorsOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)getBucketCors:(AWSS3GetBucketCorsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetBucketCors service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3GetBucketCorsOutput.</Abstract></ReturnValue>
			<Anchor>//api/name/getBucketCors:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/getBucketLifecycle:</TokenIdentifier>
			<Abstract type="html">Returns the lifecycle configuration information set on the bucket.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetBucketLifecycleRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetBucketLifecycleOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)getBucketLifecycle:(AWSS3GetBucketLifecycleRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetBucketLifecycle service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3GetBucketLifecycleOutput.</Abstract></ReturnValue>
			<Anchor>//api/name/getBucketLifecycle:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/getBucketLocation:</TokenIdentifier>
			<Abstract type="html">Returns the region the bucket resides in.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetBucketLocationRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetBucketLocationOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)getBucketLocation:(AWSS3GetBucketLocationRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetBucketLocation service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3GetBucketLocationOutput.</Abstract></ReturnValue>
			<Anchor>//api/name/getBucketLocation:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/getBucketLogging:</TokenIdentifier>
			<Abstract type="html">Returns the logging status of a bucket and the permissions users have to view and modify that status. To use GET, you must be the bucket owner.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetBucketLoggingRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetBucketLoggingOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)getBucketLogging:(AWSS3GetBucketLoggingRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetBucketLogging service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3GetBucketLoggingOutput.</Abstract></ReturnValue>
			<Anchor>//api/name/getBucketLogging:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/getBucketNotification:</TokenIdentifier>
			<Abstract type="html">Return the notification configuration of a bucket.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetBucketNotificationRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetBucketNotificationOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)getBucketNotification:(AWSS3GetBucketNotificationRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetBucketNotification service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3GetBucketNotificationOutput.</Abstract></ReturnValue>
			<Anchor>//api/name/getBucketNotification:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/getBucketPolicy:</TokenIdentifier>
			<Abstract type="html">Returns the policy of a specified bucket.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetBucketPolicyRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetBucketPolicyOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)getBucketPolicy:(AWSS3GetBucketPolicyRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetBucketPolicy service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3GetBucketPolicyOutput.</Abstract></ReturnValue>
			<Anchor>//api/name/getBucketPolicy:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/getBucketRequestPayment:</TokenIdentifier>
			<Abstract type="html">Returns the request payment configuration of a bucket.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetBucketRequestPaymentRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetBucketRequestPaymentOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)getBucketRequestPayment:(AWSS3GetBucketRequestPaymentRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetBucketRequestPayment service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3GetBucketRequestPaymentOutput.</Abstract></ReturnValue>
			<Anchor>//api/name/getBucketRequestPayment:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/getBucketTagging:</TokenIdentifier>
			<Abstract type="html">Returns the tag set associated with the bucket.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetBucketTaggingRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetBucketTaggingOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)getBucketTagging:(AWSS3GetBucketTaggingRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetBucketTagging service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3GetBucketTaggingOutput.</Abstract></ReturnValue>
			<Anchor>//api/name/getBucketTagging:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/getBucketVersioning:</TokenIdentifier>
			<Abstract type="html">Returns the versioning state of a bucket.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetBucketVersioningRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetBucketVersioningOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)getBucketVersioning:(AWSS3GetBucketVersioningRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetBucketVersioning service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3GetBucketVersioningOutput.</Abstract></ReturnValue>
			<Anchor>//api/name/getBucketVersioning:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/getBucketWebsite:</TokenIdentifier>
			<Abstract type="html">Returns the website configuration for a bucket.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetBucketWebsiteRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetBucketWebsiteOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)getBucketWebsite:(AWSS3GetBucketWebsiteRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetBucketWebsite service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3GetBucketWebsiteOutput.</Abstract></ReturnValue>
			<Anchor>//api/name/getBucketWebsite:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/getObject:</TokenIdentifier>
			<Abstract type="html">Retrieves objects from Amazon S3.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetObjectRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetObjectOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)getObject:(AWSS3GetObjectRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetObject service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3GetObjectOutput. On failed execution, task.error may contain an NSError with AWSS3ErrorDomain domain and the following error code: AWSS3ErrorNoSuchKey.</Abstract></ReturnValue>
			<Anchor>//api/name/getObject:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/getObjectAcl:</TokenIdentifier>
			<Abstract type="html">Returns the access control list (ACL) of an object.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetObjectAclRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetObjectAclOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)getObjectAcl:(AWSS3GetObjectAclRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetObjectAcl service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3GetObjectAclOutput. On failed execution, task.error may contain an NSError with AWSS3ErrorDomain domain and the following error code: AWSS3ErrorNoSuchKey.</Abstract></ReturnValue>
			<Anchor>//api/name/getObjectAcl:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/getObjectTorrent:</TokenIdentifier>
			<Abstract type="html">Return torrent files from a bucket.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetObjectTorrentRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3GetObjectTorrentOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)getObjectTorrent:(AWSS3GetObjectTorrentRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetObjectTorrent service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3GetObjectTorrentOutput.</Abstract></ReturnValue>
			<Anchor>//api/name/getObjectTorrent:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/headBucket:</TokenIdentifier>
			<Abstract type="html">This operation is useful to determine if a bucket exists and you have permission to access it.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3HeadBucketRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)headBucket:(AWSS3HeadBucketRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the HeadBucket service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSS3ErrorDomain domain and the following error code: AWSS3ErrorNoSuchBucket.</Abstract></ReturnValue>
			<Anchor>//api/name/headBucket:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/headObject:</TokenIdentifier>
			<Abstract type="html">The HEAD operation retrieves metadata from an object without returning the object itself. This operation is useful if you&apos;re only interested in an object&apos;s metadata. To use HEAD, you must have READ access to the object.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3HeadObjectRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3HeadObjectOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)headObject:(AWSS3HeadObjectRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the HeadObject service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3HeadObjectOutput. On failed execution, task.error may contain an NSError with AWSS3ErrorDomain domain and the following error code: AWSS3ErrorNoSuchKey.</Abstract></ReturnValue>
			<Anchor>//api/name/headObject:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/listBuckets:</TokenIdentifier>
			<Abstract type="html">Returns a list of all buckets owned by the authenticated sender of the request.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3ListBucketsOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)listBuckets:(AWSRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListBuckets service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3ListBucketsOutput.</Abstract></ReturnValue>
			<Anchor>//api/name/listBuckets:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/listMultipartUploads:</TokenIdentifier>
			<Abstract type="html">This operation lists in-progress multipart uploads.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3ListMultipartUploadsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3ListMultipartUploadsOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)listMultipartUploads:(AWSS3ListMultipartUploadsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListMultipartUploads service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3ListMultipartUploadsOutput.</Abstract></ReturnValue>
			<Anchor>//api/name/listMultipartUploads:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/listObjectVersions:</TokenIdentifier>
			<Abstract type="html">Returns metadata about all of the versions of objects in a bucket.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3ListObjectVersionsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3ListObjectVersionsOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)listObjectVersions:(AWSS3ListObjectVersionsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListObjectVersions service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3ListObjectVersionsOutput.</Abstract></ReturnValue>
			<Anchor>//api/name/listObjectVersions:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/listObjects:</TokenIdentifier>
			<Abstract type="html">Returns some or all (up to 1000) of the objects in a bucket. You can use the request parameters as selection criteria to return a subset of the objects in a bucket.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3ListObjectsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3ListObjectsOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)listObjects:(AWSS3ListObjectsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListObjects service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3ListObjectsOutput. On failed execution, task.error may contain an NSError with AWSS3ErrorDomain domain and the following error code: AWSS3ErrorNoSuchBucket.</Abstract></ReturnValue>
			<Anchor>//api/name/listObjects:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/listParts:</TokenIdentifier>
			<Abstract type="html">Lists the parts that have been uploaded for a specific multipart upload.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3ListPartsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3ListPartsOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)listParts:(AWSS3ListPartsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListParts service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3ListPartsOutput.</Abstract></ReturnValue>
			<Anchor>//api/name/listParts:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/putBucketAcl:</TokenIdentifier>
			<Abstract type="html">Sets the permissions on a bucket using access control lists (ACL).</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3PutBucketAclRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)putBucketAcl:(AWSS3PutBucketAclRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the PutBucketAcl service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil.</Abstract></ReturnValue>
			<Anchor>//api/name/putBucketAcl:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/putBucketCors:</TokenIdentifier>
			<Abstract type="html">Sets the cors configuration for a bucket.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3PutBucketCorsRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)putBucketCors:(AWSS3PutBucketCorsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the PutBucketCors service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil.</Abstract></ReturnValue>
			<Anchor>//api/name/putBucketCors:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/putBucketLifecycle:</TokenIdentifier>
			<Abstract type="html">Sets lifecycle configuration for your bucket. If a lifecycle configuration exists, it replaces it.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3PutBucketLifecycleRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)putBucketLifecycle:(AWSS3PutBucketLifecycleRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the PutBucketLifecycle service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil.</Abstract></ReturnValue>
			<Anchor>//api/name/putBucketLifecycle:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/putBucketLogging:</TokenIdentifier>
			<Abstract type="html">Set the logging parameters for a bucket and to specify permissions for who can view and modify the logging parameters. To set the logging status of a bucket, you must be the bucket owner.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3PutBucketLoggingRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)putBucketLogging:(AWSS3PutBucketLoggingRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the PutBucketLogging service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil.</Abstract></ReturnValue>
			<Anchor>//api/name/putBucketLogging:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/putBucketNotification:</TokenIdentifier>
			<Abstract type="html">Enables notifications of specified events for a bucket.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3PutBucketNotificationRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)putBucketNotification:(AWSS3PutBucketNotificationRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the PutBucketNotification service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil.</Abstract></ReturnValue>
			<Anchor>//api/name/putBucketNotification:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/putBucketPolicy:</TokenIdentifier>
			<Abstract type="html">Replaces a policy on a bucket. If the bucket already has a policy, the one in this request completely replaces it.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3PutBucketPolicyRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)putBucketPolicy:(AWSS3PutBucketPolicyRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the PutBucketPolicy service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil.</Abstract></ReturnValue>
			<Anchor>//api/name/putBucketPolicy:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/putBucketRequestPayment:</TokenIdentifier>
			<Abstract type="html">Sets the request payment configuration for a bucket. By default, the bucket owner pays for downloads from the bucket. This configuration parameter enables the bucket owner (only) to specify that the person requesting the download will be charged for the download.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3PutBucketRequestPaymentRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)putBucketRequestPayment:(AWSS3PutBucketRequestPaymentRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the PutBucketRequestPayment service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil.</Abstract></ReturnValue>
			<Anchor>//api/name/putBucketRequestPayment:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/putBucketTagging:</TokenIdentifier>
			<Abstract type="html">Sets the tags for a bucket.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3PutBucketTaggingRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)putBucketTagging:(AWSS3PutBucketTaggingRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the PutBucketTagging service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil.</Abstract></ReturnValue>
			<Anchor>//api/name/putBucketTagging:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/putBucketVersioning:</TokenIdentifier>
			<Abstract type="html">Sets the versioning state of an existing bucket. To set the versioning state, you must be the bucket owner.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3PutBucketVersioningRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)putBucketVersioning:(AWSS3PutBucketVersioningRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the PutBucketVersioning service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil.</Abstract></ReturnValue>
			<Anchor>//api/name/putBucketVersioning:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/putBucketWebsite:</TokenIdentifier>
			<Abstract type="html">Set the website configuration for a bucket.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3PutBucketWebsiteRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)putBucketWebsite:(AWSS3PutBucketWebsiteRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the PutBucketWebsite service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil.</Abstract></ReturnValue>
			<Anchor>//api/name/putBucketWebsite:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/putObject:</TokenIdentifier>
			<Abstract type="html">Adds an object to a bucket.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3PutObjectRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3PutObjectOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)putObject:(AWSS3PutObjectRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the PutObject service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3PutObjectOutput.</Abstract></ReturnValue>
			<Anchor>//api/name/putObject:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/putObjectAcl:</TokenIdentifier>
			<Abstract type="html">uses the acl subresource to set the access control list (ACL) permissions for an object that already exists in a bucket</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3PutObjectAclRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)putObjectAcl:(AWSS3PutObjectAclRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the PutObjectAcl service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSS3ErrorDomain domain and the following error code: AWSS3ErrorNoSuchKey.</Abstract></ReturnValue>
			<Anchor>//api/name/putObjectAcl:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/replicateObject:</TokenIdentifier>
			<Abstract type="html">Creates a copy of an object that is already stored in Amazon S3.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3ReplicateObjectRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3ReplicateObjectOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)replicateObject:(AWSS3ReplicateObjectRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ReplicateObject service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3ReplicateObjectOutput. On failed execution, task.error may contain an NSError with AWSS3ErrorDomain domain and the following error code: AWSS3ErrorObjectNotInActiveTier.</Abstract></ReturnValue>
			<Anchor>//api/name/replicateObject:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/restoreObject:</TokenIdentifier>
			<Abstract type="html">Restores an archived copy of an object back into Amazon S3</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3RestoreObjectRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)restoreObject:(AWSS3RestoreObjectRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the RestoreObject service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSS3ErrorDomain domain and the following error code: AWSS3ErrorObjectAlreadyInActiveTier.</Abstract></ReturnValue>
			<Anchor>//api/name/restoreObject:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/uploadPart:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Uploads a part in a multipart upload.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; After you initiate multipart upload and upload one or more parts, you must either complete or abort multipart upload in order to stop getting charged for storage of the uploaded parts. Only after you either complete or abort multipart upload, Amazon S3 frees up the parts storage and stops charging you for the parts storage.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3UploadPartRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3UploadPartOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)uploadPart:(AWSS3UploadPartRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UploadPart service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3UploadPartOutput.</Abstract></ReturnValue>
			<Anchor>//api/name/uploadPart:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3/uploadPartCopy:</TokenIdentifier>
			<Abstract type="html">Uploads a part by copying data from an existing object as data source.</Abstract>
			<DeclaredIn>AWSS3Service.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3UploadPartCopyRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSS3UploadPartCopyOutput</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)uploadPartCopy:(AWSS3UploadPartCopyRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UploadPartCopy service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSS3UploadPartCopyOutput.</Abstract></ReturnValue>
			<Anchor>//api/name/uploadPartCopy:</Anchor>
            <NodeRef refid="808"/>
		</Token>
		
        
        
	</File>
</Tokens>