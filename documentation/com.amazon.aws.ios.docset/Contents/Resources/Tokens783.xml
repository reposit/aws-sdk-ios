<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSLambdaListEventSourceMappingsRequest.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSLambdaListEventSourceMappingsRequest</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
            
			
			<NodeRef refid="783"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaListEventSourceMappingsRequest/setEventSourceArn:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Amazon Resource Name (ARN) of the Amazon Kinesis stream.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *eventSourceArn</Declaration>
			
			
			<Anchor>//api/name/eventSourceArn</Anchor>
            <NodeRef refid="783"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaListEventSourceMappingsRequest/eventSourceArn</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Amazon Resource Name (ARN) of the Amazon Kinesis stream.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *eventSourceArn</Declaration>
			
			
			<Anchor>//api/name/eventSourceArn</Anchor>
            <NodeRef refid="783"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSLambdaListEventSourceMappingsRequest/eventSourceArn</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Amazon Resource Name (ARN) of the Amazon Kinesis stream.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *eventSourceArn</Declaration>
			
			
			<Anchor>//api/name/eventSourceArn</Anchor>
            <NodeRef refid="783"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaListEventSourceMappingsRequest/setFunctionName:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the Lambda function.&lt;/p&gt;&lt;p&gt; You can specify an unqualified function name (for example, &quot;Thumbnail&quot;) or you can specify Amazon Resource Name (ARN) of the function (for example, &quot;arn:aws:lambda:us-west-2:account-id:function:ThumbNail&quot;). AWS Lambda also allows you to specify only the account ID qualifier (for example, &quot;account-id:Thumbnail&quot;). Note that the length constraint applies only to the ARN. If you specify only the function name, it is limited to 64 character in length. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *functionName</Declaration>
			
			
			<Anchor>//api/name/functionName</Anchor>
            <NodeRef refid="783"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaListEventSourceMappingsRequest/functionName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the Lambda function.&lt;/p&gt;&lt;p&gt; You can specify an unqualified function name (for example, &quot;Thumbnail&quot;) or you can specify Amazon Resource Name (ARN) of the function (for example, &quot;arn:aws:lambda:us-west-2:account-id:function:ThumbNail&quot;). AWS Lambda also allows you to specify only the account ID qualifier (for example, &quot;account-id:Thumbnail&quot;). Note that the length constraint applies only to the ARN. If you specify only the function name, it is limited to 64 character in length. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *functionName</Declaration>
			
			
			<Anchor>//api/name/functionName</Anchor>
            <NodeRef refid="783"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSLambdaListEventSourceMappingsRequest/functionName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the Lambda function.&lt;/p&gt;&lt;p&gt; You can specify an unqualified function name (for example, &quot;Thumbnail&quot;) or you can specify Amazon Resource Name (ARN) of the function (for example, &quot;arn:aws:lambda:us-west-2:account-id:function:ThumbNail&quot;). AWS Lambda also allows you to specify only the account ID qualifier (for example, &quot;account-id:Thumbnail&quot;). Note that the length constraint applies only to the ARN. If you specify only the function name, it is limited to 64 character in length. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *functionName</Declaration>
			
			
			<Anchor>//api/name/functionName</Anchor>
            <NodeRef refid="783"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaListEventSourceMappingsRequest/setMarker:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Optional string. An opaque pagination token returned from a previous &lt;code&gt;ListEventSourceMappings&lt;/code&gt; operation. If present, specifies to continue the list from where the returning call left off. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *marker</Declaration>
			
			
			<Anchor>//api/name/marker</Anchor>
            <NodeRef refid="783"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaListEventSourceMappingsRequest/marker</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Optional string. An opaque pagination token returned from a previous &lt;code&gt;ListEventSourceMappings&lt;/code&gt; operation. If present, specifies to continue the list from where the returning call left off. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *marker</Declaration>
			
			
			<Anchor>//api/name/marker</Anchor>
            <NodeRef refid="783"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSLambdaListEventSourceMappingsRequest/marker</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Optional string. An opaque pagination token returned from a previous &lt;code&gt;ListEventSourceMappings&lt;/code&gt; operation. If present, specifies to continue the list from where the returning call left off. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *marker</Declaration>
			
			
			<Anchor>//api/name/marker</Anchor>
            <NodeRef refid="783"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaListEventSourceMappingsRequest/setMaxItems:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Optional integer. Specifies the maximum number of event sources to return in response. This value must be greater than 0.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *maxItems</Declaration>
			
			
			<Anchor>//api/name/maxItems</Anchor>
            <NodeRef refid="783"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaListEventSourceMappingsRequest/maxItems</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Optional integer. Specifies the maximum number of event sources to return in response. This value must be greater than 0.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *maxItems</Declaration>
			
			
			<Anchor>//api/name/maxItems</Anchor>
            <NodeRef refid="783"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSLambdaListEventSourceMappingsRequest/maxItems</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Optional integer. Specifies the maximum number of event sources to return in response. This value must be greater than 0.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *maxItems</Declaration>
			
			
			<Anchor>//api/name/maxItems</Anchor>
            <NodeRef refid="783"/>
		</Token>
		
        
        
	</File>
</Tokens>