<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSDynamoDBAttributeValueUpdate.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSDynamoDBAttributeValueUpdate</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;For the &lt;i&gt;UpdateItem&lt;/i&gt; operation, represents the attributes to be modified, the action to perform on each, and the new value for each.&lt;/p&gt;&lt;p&gt;Attribute values cannot be null; string and binary type attributes must have lengths greater than zero; and set type attributes must not be empty. Requests with empty values will be rejected with a &lt;i&gt;ValidationException&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
            
			
			<NodeRef refid="143"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBAttributeValueUpdate/setAction:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Specifies how to perform the update. Valid values are &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, and &lt;code&gt;ADD&lt;/code&gt;. The behavior depends on whether the specified primary key already exists in the table.&lt;/p&gt;&lt;p&gt;&lt;b&gt;If an item with the specified &lt;i&gt;Key&lt;/i&gt; is found in the table:&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;PUT&lt;/code&gt; - Adds the specified attribute to the item. If the attribute already exists, it is replaced by the new value. &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;DELETE&lt;/code&gt; - If no value is specified, the attribute and its value are removed from the item. The data type of the specified value must match the existing value&apos;s data type.&lt;/p&gt;&lt;p&gt;If a &lt;i&gt;set&lt;/i&gt; of values is specified, then those values are subtracted from the old set. For example, if the attribute value was the set &lt;code&gt;[a,b,c]&lt;/code&gt; and the &lt;i&gt;DELETE&lt;/i&gt; action specified &lt;code&gt;[a,c]&lt;/code&gt;, then the final attribute value would be &lt;code&gt;[b]&lt;/code&gt;. Specifying an empty set is an error.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ADD&lt;/code&gt; - If the attribute does not already exist, then the attribute and its values are added to the item. If the attribute does exist, then the behavior of &lt;code&gt;ADD&lt;/code&gt; depends on the data type of the attribute:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;If the existing attribute is a number, and if &lt;i&gt;Value&lt;/i&gt; is also a number, then the &lt;i&gt;Value&lt;/i&gt; is mathematically added to the existing attribute. If &lt;i&gt;Value&lt;/i&gt; is a negative number, then it is subtracted from the existing attribute.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If the existing data type is a set, and if the &lt;i&gt;Value&lt;/i&gt; is also a set, then the &lt;i&gt;Value&lt;/i&gt; is added to the existing set. (This is a &lt;i&gt;set&lt;/i&gt; operation, not mathematical addition.) For example, if the attribute value was the set &lt;code&gt;[1,2]&lt;/code&gt;, and the &lt;code&gt;ADD&lt;/code&gt; action specified &lt;code&gt;[3]&lt;/code&gt;, then the final attribute value would be &lt;code&gt;[1,2,3]&lt;/code&gt;. An error occurs if an Add action is specified for a set attribute and the attribute type specified does not match the existing set type. &lt;/p&gt;&lt;p&gt;Both sets must have the same primitive data type. For example, if the existing data type is a set of strings, the &lt;i&gt;Value&lt;/i&gt; must also be a set of strings. The same holds true for number sets and binary sets.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This action is only valid for an existing attribute whose data type is number or is a set. Do not use &lt;code&gt;ADD&lt;/code&gt; for any other data types.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;If no item with the specified &lt;i&gt;Key&lt;/i&gt; is found:&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;PUT&lt;/code&gt; - DynamoDB creates a new item with the specified primary key, and then adds the attribute. &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;DELETE&lt;/code&gt; - Nothing happens; there is no attribute to delete.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ADD&lt;/code&gt; - DynamoDB creates an item with the supplied primary key and number (or set of numbers) for the attribute value. The only data types allowed are number and number set; no other data types can be specified.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSDynamoDBAttributeAction action</Declaration>
			
			
			<Anchor>//api/name/action</Anchor>
            <NodeRef refid="143"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBAttributeValueUpdate/action</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Specifies how to perform the update. Valid values are &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, and &lt;code&gt;ADD&lt;/code&gt;. The behavior depends on whether the specified primary key already exists in the table.&lt;/p&gt;&lt;p&gt;&lt;b&gt;If an item with the specified &lt;i&gt;Key&lt;/i&gt; is found in the table:&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;PUT&lt;/code&gt; - Adds the specified attribute to the item. If the attribute already exists, it is replaced by the new value. &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;DELETE&lt;/code&gt; - If no value is specified, the attribute and its value are removed from the item. The data type of the specified value must match the existing value&apos;s data type.&lt;/p&gt;&lt;p&gt;If a &lt;i&gt;set&lt;/i&gt; of values is specified, then those values are subtracted from the old set. For example, if the attribute value was the set &lt;code&gt;[a,b,c]&lt;/code&gt; and the &lt;i&gt;DELETE&lt;/i&gt; action specified &lt;code&gt;[a,c]&lt;/code&gt;, then the final attribute value would be &lt;code&gt;[b]&lt;/code&gt;. Specifying an empty set is an error.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ADD&lt;/code&gt; - If the attribute does not already exist, then the attribute and its values are added to the item. If the attribute does exist, then the behavior of &lt;code&gt;ADD&lt;/code&gt; depends on the data type of the attribute:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;If the existing attribute is a number, and if &lt;i&gt;Value&lt;/i&gt; is also a number, then the &lt;i&gt;Value&lt;/i&gt; is mathematically added to the existing attribute. If &lt;i&gt;Value&lt;/i&gt; is a negative number, then it is subtracted from the existing attribute.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If the existing data type is a set, and if the &lt;i&gt;Value&lt;/i&gt; is also a set, then the &lt;i&gt;Value&lt;/i&gt; is added to the existing set. (This is a &lt;i&gt;set&lt;/i&gt; operation, not mathematical addition.) For example, if the attribute value was the set &lt;code&gt;[1,2]&lt;/code&gt;, and the &lt;code&gt;ADD&lt;/code&gt; action specified &lt;code&gt;[3]&lt;/code&gt;, then the final attribute value would be &lt;code&gt;[1,2,3]&lt;/code&gt;. An error occurs if an Add action is specified for a set attribute and the attribute type specified does not match the existing set type. &lt;/p&gt;&lt;p&gt;Both sets must have the same primitive data type. For example, if the existing data type is a set of strings, the &lt;i&gt;Value&lt;/i&gt; must also be a set of strings. The same holds true for number sets and binary sets.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This action is only valid for an existing attribute whose data type is number or is a set. Do not use &lt;code&gt;ADD&lt;/code&gt; for any other data types.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;If no item with the specified &lt;i&gt;Key&lt;/i&gt; is found:&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;PUT&lt;/code&gt; - DynamoDB creates a new item with the specified primary key, and then adds the attribute. &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;DELETE&lt;/code&gt; - Nothing happens; there is no attribute to delete.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ADD&lt;/code&gt; - DynamoDB creates an item with the supplied primary key and number (or set of numbers) for the attribute value. The only data types allowed are number and number set; no other data types can be specified.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSDynamoDBAttributeAction action</Declaration>
			
			
			<Anchor>//api/name/action</Anchor>
            <NodeRef refid="143"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBAttributeValueUpdate/action</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Specifies how to perform the update. Valid values are &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, and &lt;code&gt;ADD&lt;/code&gt;. The behavior depends on whether the specified primary key already exists in the table.&lt;/p&gt;&lt;p&gt;&lt;b&gt;If an item with the specified &lt;i&gt;Key&lt;/i&gt; is found in the table:&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;PUT&lt;/code&gt; - Adds the specified attribute to the item. If the attribute already exists, it is replaced by the new value. &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;DELETE&lt;/code&gt; - If no value is specified, the attribute and its value are removed from the item. The data type of the specified value must match the existing value&apos;s data type.&lt;/p&gt;&lt;p&gt;If a &lt;i&gt;set&lt;/i&gt; of values is specified, then those values are subtracted from the old set. For example, if the attribute value was the set &lt;code&gt;[a,b,c]&lt;/code&gt; and the &lt;i&gt;DELETE&lt;/i&gt; action specified &lt;code&gt;[a,c]&lt;/code&gt;, then the final attribute value would be &lt;code&gt;[b]&lt;/code&gt;. Specifying an empty set is an error.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ADD&lt;/code&gt; - If the attribute does not already exist, then the attribute and its values are added to the item. If the attribute does exist, then the behavior of &lt;code&gt;ADD&lt;/code&gt; depends on the data type of the attribute:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;If the existing attribute is a number, and if &lt;i&gt;Value&lt;/i&gt; is also a number, then the &lt;i&gt;Value&lt;/i&gt; is mathematically added to the existing attribute. If &lt;i&gt;Value&lt;/i&gt; is a negative number, then it is subtracted from the existing attribute.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If the existing data type is a set, and if the &lt;i&gt;Value&lt;/i&gt; is also a set, then the &lt;i&gt;Value&lt;/i&gt; is added to the existing set. (This is a &lt;i&gt;set&lt;/i&gt; operation, not mathematical addition.) For example, if the attribute value was the set &lt;code&gt;[1,2]&lt;/code&gt;, and the &lt;code&gt;ADD&lt;/code&gt; action specified &lt;code&gt;[3]&lt;/code&gt;, then the final attribute value would be &lt;code&gt;[1,2,3]&lt;/code&gt;. An error occurs if an Add action is specified for a set attribute and the attribute type specified does not match the existing set type. &lt;/p&gt;&lt;p&gt;Both sets must have the same primitive data type. For example, if the existing data type is a set of strings, the &lt;i&gt;Value&lt;/i&gt; must also be a set of strings. The same holds true for number sets and binary sets.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This action is only valid for an existing attribute whose data type is number or is a set. Do not use &lt;code&gt;ADD&lt;/code&gt; for any other data types.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;If no item with the specified &lt;i&gt;Key&lt;/i&gt; is found:&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;PUT&lt;/code&gt; - DynamoDB creates a new item with the specified primary key, and then adds the attribute. &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;DELETE&lt;/code&gt; - Nothing happens; there is no attribute to delete.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ADD&lt;/code&gt; - DynamoDB creates an item with the supplied primary key and number (or set of numbers) for the attribute value. The only data types allowed are number and number set; no other data types can be specified.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSDynamoDBAttributeAction action</Declaration>
			
			
			<Anchor>//api/name/action</Anchor>
            <NodeRef refid="143"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBAttributeValueUpdate/setValue:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Represents the data for an attribute. You can set one, and only one, of the elements.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSDynamoDBAttributeValue *value</Declaration>
			
			
			<Anchor>//api/name/value</Anchor>
            <NodeRef refid="143"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBAttributeValueUpdate/value</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Represents the data for an attribute. You can set one, and only one, of the elements.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSDynamoDBAttributeValue *value</Declaration>
			
			
			<Anchor>//api/name/value</Anchor>
            <NodeRef refid="143"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBAttributeValueUpdate/value</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Represents the data for an attribute. You can set one, and only one, of the elements.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSDynamoDBAttributeValue *value</Declaration>
			
			
			<Anchor>//api/name/value</Anchor>
            <NodeRef refid="143"/>
		</Token>
		
        
	</File>
</Tokens>