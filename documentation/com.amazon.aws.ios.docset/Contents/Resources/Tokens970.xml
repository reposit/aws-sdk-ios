<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSSESSendEmailRequest.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendEmailRequest</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Represents a request instructing the service to send a single email message.&lt;/p&gt;&lt;p&gt;This datatype can be used in application code to compose a message consisting of source, destination, message, reply-to, and return-path parts. This object can then be sent using the &lt;code&gt;SendEmail&lt;/code&gt; action. &lt;/p&gt;
Required parameters: [Source, Destination, Message]</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
            
			
			<NodeRef refid="970"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSESSendEmailRequest/setDestination:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The destination for this email, composed of To:, CC:, and BCC: fields.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSSESDestination *destination</Declaration>
			
			
			<Anchor>//api/name/destination</Anchor>
            <NodeRef refid="970"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSESSendEmailRequest/destination</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The destination for this email, composed of To:, CC:, and BCC: fields.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSSESDestination *destination</Declaration>
			
			
			<Anchor>//api/name/destination</Anchor>
            <NodeRef refid="970"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSESSendEmailRequest/destination</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The destination for this email, composed of To:, CC:, and BCC: fields.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSSESDestination *destination</Declaration>
			
			
			<Anchor>//api/name/destination</Anchor>
            <NodeRef refid="970"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSESSendEmailRequest/setMessage:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The message to be sent.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSSESMessage *message</Declaration>
			
			
			<Anchor>//api/name/message</Anchor>
            <NodeRef refid="970"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSESSendEmailRequest/message</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The message to be sent.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSSESMessage *message</Declaration>
			
			
			<Anchor>//api/name/message</Anchor>
            <NodeRef refid="970"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSESSendEmailRequest/message</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The message to be sent.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSSESMessage *message</Declaration>
			
			
			<Anchor>//api/name/message</Anchor>
            <NodeRef refid="970"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSESSendEmailRequest/setReplyToAddresses:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The reply-to email address(es) for the message. If the recipient replies to the message, each reply-to address will receive the reply. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray *replyToAddresses</Declaration>
			
			
			<Anchor>//api/name/replyToAddresses</Anchor>
            <NodeRef refid="970"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSESSendEmailRequest/replyToAddresses</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The reply-to email address(es) for the message. If the recipient replies to the message, each reply-to address will receive the reply. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray *replyToAddresses</Declaration>
			
			
			<Anchor>//api/name/replyToAddresses</Anchor>
            <NodeRef refid="970"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSESSendEmailRequest/replyToAddresses</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The reply-to email address(es) for the message. If the recipient replies to the message, each reply-to address will receive the reply. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray *replyToAddresses</Declaration>
			
			
			<Anchor>//api/name/replyToAddresses</Anchor>
            <NodeRef refid="970"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSESSendEmailRequest/setReturnPath:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The email address to which bounces and complaints are to be forwarded when feedback forwarding is enabled. If the message cannot be delivered to the recipient, then an error message will be returned from the recipient&apos;s ISP; this message will then be forwarded to the email address specified by the &lt;code&gt;ReturnPath&lt;/code&gt; parameter. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *returnPath</Declaration>
			
			
			<Anchor>//api/name/returnPath</Anchor>
            <NodeRef refid="970"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSESSendEmailRequest/returnPath</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The email address to which bounces and complaints are to be forwarded when feedback forwarding is enabled. If the message cannot be delivered to the recipient, then an error message will be returned from the recipient&apos;s ISP; this message will then be forwarded to the email address specified by the &lt;code&gt;ReturnPath&lt;/code&gt; parameter. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *returnPath</Declaration>
			
			
			<Anchor>//api/name/returnPath</Anchor>
            <NodeRef refid="970"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSESSendEmailRequest/returnPath</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The email address to which bounces and complaints are to be forwarded when feedback forwarding is enabled. If the message cannot be delivered to the recipient, then an error message will be returned from the recipient&apos;s ISP; this message will then be forwarded to the email address specified by the &lt;code&gt;ReturnPath&lt;/code&gt; parameter. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *returnPath</Declaration>
			
			
			<Anchor>//api/name/returnPath</Anchor>
            <NodeRef refid="970"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSESSendEmailRequest/setSource:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The identity&apos;s email address.&lt;/p&gt;&lt;p&gt; By default, the string must be 7-bit ASCII. If the text must contain any other characters, then you must use MIME encoded-word syntax (RFC 2047) instead of a literal string. MIME encoded-word syntax uses the following form: &lt;code&gt;=?charset?encoding?encoded-text?=&lt;/code&gt;. For more information, see RFC 2047. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *source</Declaration>
			
			
			<Anchor>//api/name/source</Anchor>
            <NodeRef refid="970"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSESSendEmailRequest/source</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The identity&apos;s email address.&lt;/p&gt;&lt;p&gt; By default, the string must be 7-bit ASCII. If the text must contain any other characters, then you must use MIME encoded-word syntax (RFC 2047) instead of a literal string. MIME encoded-word syntax uses the following form: &lt;code&gt;=?charset?encoding?encoded-text?=&lt;/code&gt;. For more information, see RFC 2047. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *source</Declaration>
			
			
			<Anchor>//api/name/source</Anchor>
            <NodeRef refid="970"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSESSendEmailRequest/source</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The identity&apos;s email address.&lt;/p&gt;&lt;p&gt; By default, the string must be 7-bit ASCII. If the text must contain any other characters, then you must use MIME encoded-word syntax (RFC 2047) instead of a literal string. MIME encoded-word syntax uses the following form: &lt;code&gt;=?charset?encoding?encoded-text?=&lt;/code&gt;. For more information, see RFC 2047. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *source</Declaration>
			
			
			<Anchor>//api/name/source</Anchor>
            <NodeRef refid="970"/>
		</Token>
		
        
        
	</File>
</Tokens>